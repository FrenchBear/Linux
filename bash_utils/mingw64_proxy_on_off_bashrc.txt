# updated version here: https://gist.github.com/garystafford/8196920

# loosely based on post from ArchWiki and Alan Pope
# https://wiki.archlinux.org/index.php/proxy_settings
# this is alternative to git config

# configure proxy for git while on corporate network
function proxy_on(){
   export PASSWORD='Knout3873%'
   export PROXY_SERVER=10.33.200.237
   export PROXY_PORT=8080

   # $USERDOMAIN, $USERNAME, $USERDNSDOMAIN 
   # are existing Windows environment variables on my computer
   
   # on Windows env vars are UPPERCASE even in git bash
   export HTTP_PROXY="http://$USERNAME:$PASSWORD@$PROXY_SERVER:$PROXY_PORT"
   export HTTPS_PROXY=$HTTP_PROXY
   export FTP_PROXY=$HTTP_PROXY
   export ALL_PROXY=$HTTP_PROXY # for SOCKS use ALL_PROXY or SOCKS_PROXY?

   export NO_PROXY="localhost,127.0.0.1,$USERDNSDOMAIN"
   
   # optional for debugging 
   export GIT_CURL_VERBOSE=1
   
   # optional Self Signed SSL certs and
   # internal CA certificate in an corporate environment
   export GIT_SSL_NO_VERIFY=1

   env | grep -e _PROXY -e GIT_ | sort
   echo -e "\nProxy-related environment variables set."
}

# remove proxy settings when off corporate network
function proxy_off(){
   variables=( \
      "PASSWORD" "PROXY_SERVER" "PROXY_PORT" \
      "HTTP_PROXY" "HTTPS_PROXY" "FTP_PROXY" "ALL_PROXY" \
      "NO_PROXY" "GIT_CURL_VERBOSE" "GIT_SSL_NO_VERIFY" \
   )

   for i in "${variables[@]}"
   do
      unset $i
   done

   env | grep -e _PROXY -e GIT_ | sort
   echo -e "\nProxy-related environment variables removed."
}

alias l="ls -l"
alias d="ls -l"
alias more=less

